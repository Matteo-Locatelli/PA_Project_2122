/*
 * MenuPrimo.cpp
 *
 *  Created on: 17 ago 2022
 *      Author: matte
 */

#include <iostream>
#include <cstdlib>
#include <string>
#include <sstream>
#include <ctime>
#include <memory>
#include <vector>
#include <list>

#include "MenuPrimo.h"

using namespace std;

enum Primo : int {
	pizza = 0, lasagne = 1, pasta = 2, riso = 3
};

enum Dessert : int {
	tiramisu = 0, cheesecake = 1, frutta = 2
};

enum Caffe : int{
	no = 0, si = 1
};

const int MenuPrimo::prezzo_menu_primo = 10;

MenuPrimo::MenuPrimo(utente_ref u, int prezzo , time_t data, Orario o, Primo primo, Dessert dessert, Caffe caffe):
												Menu::Menu(u, prezzo, data, o){
	this->primo = primo;
	this->dessert = dessert;
	this->caffe = caffe;
}

MenuPrimo::MenuPrimo(menu_ref menu, Primo primo, Dessert dessert, Caffe caffe) : Menu::Menu(*menu){
	this->primo = primo;
	this->dessert = dessert;
	this->caffe = caffe;
}

int MenuPrimo::get_prezzo(){
	return prezzo_menu_primo;
}

Primo MenuPrimo::get_primo(){
	return this->primo;
}

void MenuPrimo::set_primo(Primo const p){
	this->primo = p;
}

Dessert MenuPrimo::get_dessert() {
	return this->dessert;
}

void MenuPrimo::set_dessert(Dessert const d){
	this->dessert = d;
}

Caffe MenuPrimo::get_caffe(){
	return this->caffe;
}

void MenuPrimo::set_caffe(Caffe const c){
	this->caffe = c;
}

Primo MenuPrimo::get_primo_from_int(int const p){
	if (p==0) {
		return Primo::pizza;
	} else if (p==1) {
		return Primo::lasagne;
	} else if (p==2) {
		return Primo::pasta;
	} else {
		return Primo::riso;
	}
}

Dessert MenuPrimo::get_dessert_from_int(int const d){
	if (d==0) {
		return Dessert::tiramisu;
	} else if (d==1) {
		return Dessert::cheesecake;
	} else {
		return Dessert::frutta;
	}
}

Caffe MenuPrimo::get_caffe_from_int(int const c){
	if (c==0) {
		return Caffe::no;
	} else {
		return Caffe::si;
	}
}

string MenuPrimo::get_string_primo_from_enum(Primo const p){
	if(p==Primo::pizza){
		return "Pizza";
	} else if (p==Primo::lasagne){
		return "Lasagne";
	} else if (p==Primo::pasta){
		return "Pasta";
	} else if (p==Primo::riso){
		return "Riso";
	} else {
		return "Errore";
	}
}

string MenuPrimo::get_string_dessert_from_enum(Dessert const d){
	if(d==Dessert::tiramisu){
		return "Tiramisu";
	} else if (d==Dessert::cheesecake){
		return "Cheesecake";
	} else if (d==Dessert::frutta){
		return "Frutta";
	} else {
		return "Errore";
	}
}

string MenuPrimo::get_string_caffe_from_enum(Caffe const c){
	if(c==Caffe::no){
		return "No";
	} else if (c==Caffe::si){
		return "Si";
	} else {
		return "Errore";
	}
}

string MenuPrimo::get_string(){
	stringstream streamer;

	streamer << Menu::get_string() << endl;

	streamer << "Primo: " << MenuPrimo::get_string_primo_from_enum(this->primo) << endl;
	streamer << "Dessert: " << MenuPrimo::get_string_dessert_from_enum(this->dessert) << endl;
	streamer << "Caffe: " << MenuPrimo::get_string_caffe_from_enum(this->caffe) << endl;

	return streamer.str();
}

int MenuPrimo::compare_to(comparable_ref c){
	unique_ptr<LezioneCollettiva> other(dynamic_cast<LezioneCollettiva*>(c.get()));
	return this->get_data() - other->get_data();
}

MenuPrimo::~MenuPrimo(){
	cout << "Elimino menu primo" << endl;
}

